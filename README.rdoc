= redis_throttle

A simple class to rate-limit execution of blocks of code. Add redis-throttle to your Gemfile like so:

    gem "redis_throttle"

Then wrap any block you want to throttle in the RedisThrottle.limit method, like so:

    # you MUST pass the number of seconds to throttle your method by
    RedisThrottle.limit(30) do
      do_wall_post_stuff()
      counter += 1
      logger.write_to_log
    end

You can also namespace the throttling to any number of arguments passed to the limit method

    RedisThrottle.limit(30, user_id, endpoint_name) do
      do_wall_post_stuff(user_id)
      counter[endpoint_name] += 1
      logger.write_to_log(user_id, endpoint_name)
    end

Couldn't be easier.

== Contributing to redis_throttle
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Heyzap, Inc. See LICENSE.txt for
further details.

